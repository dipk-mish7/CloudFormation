{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Here are some details about the template.",
    "Parameters": {
        "vpcname": {
            "Description": "Name your VPC",
            "Type": "String",
            "Default": "VPC from Cloudformation"
        },
        "websub": {
            "Description": "Name your Web Subnet",
            "Type": "String",
            "Default": "Web Subnet from Cloudformation"
        },
        "websubbcp": {
            "Description": "Name your Backup Web Subnet",
            "Type": "String",
            "Default": "Backup Web Subnet from Cloudformation"
        },
        "appsub": {
            "Description": "Name your app Subnet",
            "Type": "String",
            "Default": "app Subnet from Cloudformation"
        },
        "appsubbcp": {
            "Description": "Name your Backup App Subnet",
            "Type": "String",
            "Default": "Backup App Subnet from Cloudformation"
        },
        "dbsub": {
            "Description": "Name your DB Subnet",
            "Type": "String",
            "Default": "DB Subnet from Cloudformation"
        },
        "dbsubbcp": {
            "Description": "Name your Backup DB Subnet",
            "Type": "String",
            "Default": "Backup DB Subnet from Cloudformation"
        },
        "VPCCIDR": {
            "Description": "Put your VPC CIDR Value",
            "Type": "String",
            "Default": "0.0.0.0/0"
        },
        "webcidr": {
            "Description": "Put your Web CIDR Value",
            "Type": "String",
            "Default": "0.0.0.0/0"
        },
        "webbcpcidr": {
            "Description": "Put your Web CIDR Value",
            "Type": "String",
            "Default": "0.0.0.0/0"
        },
        "appcidr": {
            "Description": "Put your App CIDR Value",
            "Type": "String",
            "Default": "0.0.0.0/0"
        },
        "appbcpcidr": {
            "Description": "Put your Backup App CIDR Value",
            "Type": "String",
            "Default": "0.0.0.0/0"
        },
        "dbcidr": {
            "Description": "Put your DB CIDR Value",
            "Type": "String",
            "Default": "0.0.0.0/0"
        },
        "dbbcpcidr": {
            "Description": "Put your Backup DB CIDR Value",
            "Type": "String",
            "Default": "0.0.0.0/0"
        },
        "websubaz": {
            "Description": "Name AZ of Web Subnet",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "webbcpsubaz": {
            "Description": "Name AZ of Bacup Web Subnet",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "appsubaz": {
            "Description": "Name AZ of App Subnet",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "appbcpsubaz": {
            "Description": "Name AZ of Backup App Subnet",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "dbsubaz": {
            "Description": "Name AZ of DB Subnet",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "dbbcpsubaz": {
            "Description": "Name AZ of Backup DB Subnet",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "appserverkeypair": {
            "Description": "Select Keypair for app server",
            "Type": "AWS::EC2::KeyPair::KeyName",
        },
        "AppserverType": {
            "Description": "Select Instance Types for App server",
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": [
                "t2.micro",
                "m1.small",
                "m1.large"
            ],
            "Description": "Enter t2.micro, m1.small, or m1.large. Default is t2.micro."
        }
    },
    "Mappings": {
        "RegionMap": {
            "ap-south-1": {
                "Ubuntu18ami": "ami-04bde106886a53080"
            },
            "us-east-1": {
                "Ubuntu18ami": "ami-0747bdcabd34c712a"
            },
            "us-east-2": {
                "Ubuntu18ami": "ami-0b9064170e32bde34"
            },
            "us-west-2": {
                "Ubuntu18ami": " ami-090717c950a5c34d3"
            }
        }
    },
    "Resources": {
        "ntier": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "VPCCIDR"
                },
                "EnableDnsHostnames": true,
                "EnableDnsSupport": true,
                "InstanceTenancy": "default",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "vpcname"
                    }
                ]
            }
        },
        "web": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "websubaz"
                },
                "VpcId": {
                    "Ref": "ntier"
                },
                "CidrBlock": {
                    "Ref": "webcidr"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "websub"
                    }
                ]
            }
        },
        "webbcp": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "webbcpsubaz"
                },
                "VpcId": {
                    "Ref": "ntier"
                },
                "CidrBlock": {
                    "Ref": "webbcpcidr"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "websubbcp"
                    }
                ]
            }
        },
        "app": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "appsubaz"
                },
                "VpcId": {
                    "Ref": "ntier"
                },
                "CidrBlock": {
                    "Ref": "appcidr"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "appsub"
                    }
                ]
            }
        },
        "appbcp": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "appbcpsubaz"
                },
                "VpcId": {
                    "Ref": "ntier"
                },
                "CidrBlock": {
                    "Ref": "appbcpcidr"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "appsubbcp"
                    }
                ]
            }
        },
        "db": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "dbsubaz"
                },
                "VpcId": {
                    "Ref": "ntier"
                },
                "CidrBlock": {
                    "Ref": "dbcidr"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "dbsub"
                    }
                ]
            }
        },
        "dbbcp": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "dbbcpsubaz"
                },
                "VpcId": {
                    "Ref": "ntier"
                },
                "CidrBlock": {
                    "Ref": "dbbcpcidr"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "dbsubbcp"
                    }
                ]
            }
        },
        "privateRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "ntier"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Private-RT"
                    }
                ]
            }
        },
        "publicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "ntier"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Public-RT"
                    }
                ]
            }
        },
        "igw": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "ntier-igw"
                    }
                ]
            }
        },
        "AttachGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "ntier"
                },
                "InternetGatewayId": {
                    "Ref": "igw"
                }
            }
        },
        "routeName": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "publicRouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "igw"
                }
            }
        },
        "PubWeb": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "web"
                },
                "RouteTableId": {
                    "Ref": "publicRouteTable"
                }
            }
        },
        "PubWebbcp": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "webbcp"
                },
                "RouteTableId": {
                    "Ref": "publicRouteTable"
                }
            }
        },
        "PriApp": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "app"
                },
                "RouteTableId": {
                    "Ref": "privateRouteTable"
                }
            }
        },
        "PriAppbcp": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "appbcp"
                },
                "RouteTableId": {
                    "Ref": "privateRouteTable"
                }
            }
        },
        "PriDb": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "db"
                },
                "RouteTableId": {
                    "Ref": "privateRouteTable"
                }
            }
        },
        "PriDbbcp": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "dbbcp"
                },
                "RouteTableId": {
                    "Ref": "privateRouteTable"
                }
            }
        },
        "rdsDBSubnetGroup": {
            "Type": "AWS::RDS::DBSubnetGroup",
            "Properties": {
                "DBSubnetGroupDescription": "This is for Database ",
                "SubnetIds": [
                    {
                        "Ref": "db"
                    },
                    {
                        "Ref": "dbbcp"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "dbsubnet"
                    }
                ]
            }
        },
        "rdsDBInstance": {
            "Type": "AWS::RDS::DBInstance",
            "Properties": {
                "AllocatedStorage": "20",
                "DBInstanceClass": "db.t2.micro",
                "AllowMajorVersionUpgrade": "false",
                "AutoMinorVersionUpgrade": "false",
                "BackupRetentionPeriod": "0",
                "DBInstanceIdentifier": "ntierdb",
                "DBName": "ntierdatabase",
                "DBSubnetGroupName": {
                    "Ref": "rdsDBSubnetGroup"
                },
                "Engine": "mysql",
                "MasterUsername": "root",
                "MasterUserPassword": "rootroot",
                "MultiAZ": "false",
                "PubliclyAccessible": "true",
                "StorageType": "gp2",
                "VPCSecurityGroups": [
                    {
                        "Ref": "dbsecurityGroup"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "ntierDb"
                    }
                ]
            }
        },
        "dbsecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "This SG is for Db",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        },
                        "IpProtocol": "tcp",
                        "FromPort": "3306",
                        "ToPort": "3306"
                    }
                ],
                "VpcId": {
                    "Ref": "ntier"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "DBSecurityGroup"
                    }
                ]
            }
        },
        "AppsecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "This SG is for App",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        },
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22"
                    },
                    {
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        },
                        "IpProtocol": "tcp",
                        "FromPort": "8080",
                        "ToPort": "8080"
                    }
                ],
                "VpcId": {
                    "Ref": "ntier"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "AppSecurityGroup"
                    }
                ]
            }
        },
        "WebsecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "This SG is for Web",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80"
                    }
                ],
                "VpcId": {
                    "Ref": "ntier"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "AppSecurityGroup"
                    }
                ]
            }
        },
        "appserver": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "KeyName": {
                    "Ref": "appserverkeypair"
                },
                "ImageId": "ami-04bde106886a53080",
                "InstanceType": {
                    "Ref": "AppserverType"
                },
                "Monitoring": "false",
                "SubnetId": {
                    "Ref": "app"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "AppsecurityGroup"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "AppserverEC2"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -ex",
                                "sudo apt-get update",
                                "sudo apt-get install tomcat8",
                                "sudo systemctl enable tomcat8"
                            ]
                        ]
                    }
                }
            }
        }
    }
}